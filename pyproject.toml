[build-system]
requires = ["setuptools >= 75.8.0"]
build-backend = "setuptools.build_meta"

[project]
name = "robotstatuschecker"
version = "4.1.1"
description = "A tool for checking that Robot Framework test cases have expected statuses and log messages."
readme = "README.rst"
authors = [{name = "Pekka KlÃ¤rck"}, {name = "Tatu Aalto"}, {name = "Robot Framework Developers"}]
requires-python = ">=3.8,<4.0"
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "License :: OSI Approved :: Apache Software License",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3",
  "Topic :: Software Development :: Testing",
  "Framework :: Robot Framework",
]
keywords = [
  "robotframework",
  "testing",
  "testautomation",
  "atdd",
]
dependencies = [
  "robotframework >= 6.1.1",
]
license = { file = "LICENSE.txt" }

[project.urls]
"Homepage" = "https://github.com/robotframework/statuschecker"
"Issues" = "https://github.com/robotframework/statuschecker/issues"
"Changelog" = "https://github.com/robotframework/statuschecker/tree/master/docs/releasenotes"

[tool.ruff]
exclude = [
  "__pycache__",
  ".venv",
  ".git",
]
line-length = 88
lint.ignore = [
  "T201",      # Allow print
  "N818",      # Don't require exceptions names to end with Error
  "PTH100",    # Allow using os.path (we want normpath() instead of Path.resolve())
  "PTH123",    # Allow using open() instead of Path.open()
  "B904",      # Don't require from clause with raise inside except
  "SIM102",    # Don't force combining nested ifs
]
target-version = "py38"
lint.select = [
  "E",
  "F",
  "W",
  "C90",
  "I",
  "N",
  "B",
  "PYI",
  "PL",
  "PTH",
  "UP",
  "A",
  "C4",
  "DTZ",
  "ISC",
  "ICN",
  "INP",
  "PIE",
  "T20",
  "PYI",
  "PT",
  "RSE",
  "RET",
  "SIM",
  "RUF"
]

[[tool.mypy.overrides]]
module = ["robot.api.*"]
follow_untyped_imports = true
